// Code generated by mockery v2.30.16. DO NOT EDIT.

package mocks

import (
	context "context"

	types "github.com/aws/aws-sdk-go-v2/service/ec2/types"
	mock "github.com/stretchr/testify/mock"
)

// Ec2InstanceGetter is an autogenerated mock type for the Ec2InstanceGetter type
type Ec2InstanceGetter struct {
	mock.Mock
}

type Ec2InstanceGetter_Expecter struct {
	mock *mock.Mock
}

func (_m *Ec2InstanceGetter) EXPECT() *Ec2InstanceGetter_Expecter {
	return &Ec2InstanceGetter_Expecter{mock: &_m.Mock}
}

// Get provides a mock function with given fields: ctx, instanceID, region
func (_m *Ec2InstanceGetter) Get(ctx context.Context, instanceID string, region string) (*types.Instance, error) {
	ret := _m.Called(ctx, instanceID, region)

	var r0 *types.Instance
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) (*types.Instance, error)); ok {
		return rf(ctx, instanceID, region)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, string) *types.Instance); ok {
		r0 = rf(ctx, instanceID, region)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.Instance)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, instanceID, region)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Ec2InstanceGetter_Get_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Get'
type Ec2InstanceGetter_Get_Call struct {
	*mock.Call
}

// Get is a helper method to define mock.On call
//   - ctx context.Context
//   - instanceID string
//   - region string
func (_e *Ec2InstanceGetter_Expecter) Get(ctx interface{}, instanceID interface{}, region interface{}) *Ec2InstanceGetter_Get_Call {
	return &Ec2InstanceGetter_Get_Call{Call: _e.mock.On("Get", ctx, instanceID, region)}
}

func (_c *Ec2InstanceGetter_Get_Call) Run(run func(ctx context.Context, instanceID string, region string)) *Ec2InstanceGetter_Get_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *Ec2InstanceGetter_Get_Call) Return(_a0 *types.Instance, _a1 error) *Ec2InstanceGetter_Get_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *Ec2InstanceGetter_Get_Call) RunAndReturn(run func(context.Context, string, string) (*types.Instance, error)) *Ec2InstanceGetter_Get_Call {
	_c.Call.Return(run)
	return _c
}

// NewEc2InstanceGetter creates a new instance of Ec2InstanceGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEc2InstanceGetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *Ec2InstanceGetter {
	mock := &Ec2InstanceGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
